mod common;
use common::*;

use usb_gadget::function::hid::Hid;

#[test]
fn hid() {
    init();

    // Keyboard HID description
    let mut builder = Hid::builder();
    builder.protocol = 1;
    builder.sub_class = 1;
    builder.report_len = 8;
    builder.report_desc = vec![
        0x05, 0x01, 0x09, 0x06, 0xa1, 0x01, 0x05, 0x07, 0x19, 0xe0, 0x29, 0xe7, 0x15, 0x00, 0x25, 0x01, 0x75,
        0x01, 0x95, 0x08, 0x81, 0x02, 0x95, 0x01, 0x75, 0x08, 0x81, 0x03, 0x95, 0x05, 0x75, 0x01, 0x05, 0x08,
        0x19, 0x01, 0x29, 0x05, 0x91, 0x02, 0x95, 0x01, 0x75, 0x03, 0x91, 0x03, 0x95, 0x06, 0x75, 0x08, 0x15,
        0x00, 0x25, 0x65, 0x05, 0x07, 0x19, 0x00, 0x29, 0x65, 0x81, 0x00, 0xc0,
    ];
    let (hid, func) = builder.build();

    let reg = reg(func);

    println!("HID device {:?} at {}", hid.device().unwrap(), hid.path().unwrap().display());

    unreg(reg).unwrap();
}
